<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on R Portfolio</title>
    <link>/blog/</link>
    <description>Recent content in Blogs on R Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 15 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python &amp; R</title>
      <link>/blog/python/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/python/</guid>
      <description>It may seem like Python and R have nothing in common. However, they can sometimes be used interchangeably. While only a short and sweet example is given, it just goes to show that R and Python can exist harmoniously.
#R library(reticulate) #Python import pandas as pd import seaborn as sns iris=sns.load_dataset(&amp;#39;iris&amp;#39;) length=iris[&amp;quot;petal_length&amp;quot;] width=iris[&amp;quot;petal_width&amp;quot;] #R library(dplyr) ## ## Attaching package: &amp;#39;dplyr&amp;#39; ## The following objects are masked from &amp;#39;package:stats&amp;#39;: ## ## filter, lag ## The following objects are masked from &amp;#39;package:base&amp;#39;: ## ## intersect, setdiff, setequal, union L&amp;lt;-py$length L%&amp;gt;%head() ## 0 1 2 3 4 5 ## 1.</description>
    </item>
    
  </channel>
</rss>